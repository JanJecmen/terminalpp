name: release

on:
  push:
    branches:
    - master

jobs:
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: build-terminalpp
      run: |
        mkdir build
        cd build
        cmake .. -DPACKAGE=terminalpp
        cmake --build . --clean-first --config Release --target packages
        # build/packages/terminalpp.msi
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: install-snapcraft
      run: |
        bash scripts/github-actions-install-snapcraft.sh 
    - name: install-packages
      run: |
        bash scripts/setup-linux.sh
    - name: build-terminalpp
      run: |
        mkdir -p build
        cd build
        sudo cmake .. -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 -DSNAP_EXTRA_ARGS=--use-lxd -DPACKAGE=terminalpp
        sudo cmake --build . --target packages
        # build/packages/terminalpp.deb
        # build/packages/terminalpp.rpm
        # build/packages/terminalpp.snap
    - name: build-ropen
      run: |
        cd build
        sudo cmake .. -DPACKAGE=ropen
        sudo cmake --build . --target packages
        # build/packages/ropen.deb
        # build/packages/ropen.rpm
        # build/packages/ropen.snap
#    - name: build-bypass
#      run: |
#        cd build/release
#        sudo cmake ../.. -DPACKAGE_INSTALL=tpp-bypass
#        sudo cmake --build . --target packages
#        # build/release/packages/tpp-bypass.deb
#        # build/release/packages/tpp-bypass.rpm
  macOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: install-packages
      run: |
        bash scripts/setup-macos.sh
    - name: build-terminalpp
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DPACKAGE=terminalpp
        cmake --build . --target packages
        # build/packages/terminalpp.zip
